{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EPUFPAU\\\\Desktop\\\\todo-app\\\\src\\\\components\\\\counter\\\\Counter.jsx\";\nimport React, { Component } from 'react';\nimport './Counter.css';\nimport { tsExpressionWithTypeArguments } from '@babel/types';\n\nclass Counter extends Component {\n  // Define the initial state in a constructor\n  // state => counter 0\n  constructor() {\n    super(); // Error 1\n\n    this.state = {\n      counter: 0,\n      secondCounter: 100\n    };\n    this.increment = this.increment.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"counter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.increment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"+1\"), React.createElement(\"span\", {\n      className: \"count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.state.counter), React.createElement(\"span\", {\n      className: \"count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.state.counter));\n  }\n\n  increment() {\n    // Update state\n    // console.log('increment');\n    this.setState({\n      counter: this.state.counter + 1\n    });\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["C:\\Users\\EPUFPAU\\Desktop\\todo-app\\src\\components\\counter\\Counter.jsx"],"names":["React","Component","tsExpressionWithTypeArguments","Counter","constructor","state","counter","secondCounter","increment","bind","render","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,SAASC,6BAAT,QAA8C,cAA9C;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAE5B;AACA;AAEAG,EAAAA,WAAW,GAAG;AACV,YADU,CACD;;AACT,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,CADA;AAETC,MAAAA,aAAa,EAAE;AAFN,KAAb;AAKA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,KAAKF,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,KAAKH,KAAL,CAAWC,OAApC,CAFJ,EAGI;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,KAAKD,KAAL,CAAWC,OAApC,CAHJ,CADJ;AAQH;;AACDE,EAAAA,SAAS,GAAG;AAAE;AACV;AACA,SAAKG,QAAL,CAAc;AACVL,MAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,GAAqB;AADpB,KAAd;AAGH;;AA9B2B;;AAoChC,eAAeH,OAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport './Counter.css'\r\nimport { tsExpressionWithTypeArguments } from '@babel/types';\r\n\r\nclass Counter extends Component {\r\n\r\n    // Define the initial state in a constructor\r\n    // state => counter 0\r\n\r\n    constructor() {\r\n        super(); // Error 1\r\n        this.state = {\r\n            counter: 0,\r\n            secondCounter: 100\r\n        }\r\n\r\n        this.increment = this.increment.bind(this)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"counter\">\r\n                <button onClick={this.increment}>+1</button>\r\n                <span className=\"count\">{this.state.counter}</span>\r\n                <span className=\"count\">{this.state.counter}</span>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    increment() { // Update state\r\n        // console.log('increment');\r\n        this.setState({\r\n            counter: this.state.counter + 1\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Counter"]},"metadata":{},"sourceType":"module"}
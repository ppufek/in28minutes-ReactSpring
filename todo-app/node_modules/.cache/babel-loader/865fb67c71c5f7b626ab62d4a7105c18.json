{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EPUFPAU\\\\Desktop\\\\todo-app\\\\src\\\\components\\\\todo\\\\LoginComponent.jsx\";\nimport React, { Component } from 'react';\nimport AuthenticationService from './AuthenticationService.js';\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: 'in28minutes',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false // this.handleUsernameChange = this.handleUsernameChange.bind(this)\n      // this.handlePasswordChange = this.handlePasswordChange.bind(this)\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    console.log(this.state);\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    //in28minutes, dummy\n    // if (this.state.username === 'in28minutes' && this.state.password === 'dummy') {\n    //     AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password)\n    //     //redirect to welcome page\n    //     this.props.history.push(`/welcome/${this.state.username}`)\n    //     //this.setState({ showSuccessMessage: true })\n    //     //this.setState({ hasLoginFailed: false })\n    // } else {\n    //     console.log('Failed')\n    //     this.setState({ showSuccessMessage: false })\n    //     this.setState({ hasLoginFailed: true })\n    // }\n    // AuthenticationService.executeBasicAuthenticationService(this.state.username, this.state.password)\n    //     .then(() => {\n    //         AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password)\n    //         this.props.history.push(`/welcome/${this.state.username}`)\n    //     }).catch(() => {\n    //         this.setState({ showSuccessMessage: false })\n    //         this.setState({ hasLoginFailed: true })\n    //     })\n    AuthenticationService.executeJwtAuthenticationService(this.state.username, this.state.password).then(respon => {\n      AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n      this.props.history.push(\"/welcome/\".concat(this.state.username));\n    }).catch(() => {\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    });\n  } // handleUsernameChange(event) {\n  //     console.log(event.target.value);\n  //     this.setState(\n  //         {\n  //             [event.target.name] : event.target.value\n  //         }\n  //     )\n  // }\n  // handlePasswordChange(event) {\n  //     console.log(event.target.value);\n  //     this.setState(\n  //         {\n  //             password: event.target.value\n  //         }\n  //     )\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.hasLoginFailed && React.createElement(\"div\", {\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Invalid Credentials\"), this.state.showSuccessMessage && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Login Successful\"), \"User Name: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), \"Password: \", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.loginClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Login\")));\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["C:\\Users\\EPUFPAU\\Desktop\\todo-app\\src\\components\\todo\\LoginComponent.jsx"],"names":["React","Component","AuthenticationService","LoginComponent","constructor","props","state","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","console","log","setState","target","name","value","executeJwtAuthenticationService","then","respon","registerSuccessfulLogin","history","push","catch","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;;AAEA,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AAEnCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,aADD;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,cAAc,EAAE,KAHP;AAITC,MAAAA,kBAAkB,EAAE,KAJX,CAMb;AACA;;AAPa,KAAb;AAQA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AAEH;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB;AACA,SAAKW,QAAL,CACI;AACI,OAACH,KAAK,CAACI,MAAN,CAAaC,IAAd,GAAqBL,KAAK,CAACI,MAAN,CAAaE;AADtC,KADJ;AAKH;;AAEDP,EAAAA,YAAY,GAAG;AACX;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAX,IAAAA,qBAAqB,CAACmB,+BAAtB,CAAsD,KAAKf,KAAL,CAAWC,QAAjE,EAA2E,KAAKD,KAAL,CAAWE,QAAtF,EACKc,IADL,CACWC,MAAD,IAAY;AACdrB,MAAAA,qBAAqB,CAACsB,uBAAtB,CAA8C,KAAKlB,KAAL,CAAWC,QAAzD,EAAmE,KAAKD,KAAL,CAAWE,QAA9E;AACA,WAAKH,KAAL,CAAWoB,OAAX,CAAmBC,IAAnB,oBAAoC,KAAKpB,KAAL,CAAWC,QAA/C;AACH,KAJL,EAIOoB,KAJP,CAIa,MAAM;AACX,WAAKV,QAAL,CAAc;AAAEP,QAAAA,kBAAkB,EAAE;AAAtB,OAAd;AACA,WAAKO,QAAL,CAAc;AAAER,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACH,KAPL;AASH,GA5DkC,CA8DnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAmB,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKK,KAAKtB,KAAL,CAAWG,cAAX,IAA6B;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BALlC,EAOK,KAAKH,KAAL,CAAWI,kBAAX,IAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPtC,iBAWe;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,QAArD;AAA+D,MAAA,QAAQ,EAAE,KAAKI,YAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXf,gBAYc;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,QAAzD;AAAmE,MAAA,QAAQ,EAAE,KAAKG,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZd,EAaI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,KAAKE,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAbJ,CAFJ,CADJ;AAqBH;;AAtGkC;;AAyGvC,eAAeV,cAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport AuthenticationService from './AuthenticationService.js'\r\n\r\nclass LoginComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: 'in28minutes',\r\n            password: '',\r\n            hasLoginFailed: false,\r\n            showSuccessMessage: false\r\n        }\r\n        // this.handleUsernameChange = this.handleUsernameChange.bind(this)\r\n        // this.handlePasswordChange = this.handlePasswordChange.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.loginClicked = this.loginClicked.bind(this)\r\n\r\n    }\r\n\r\n    handleChange(event) {\r\n        console.log(this.state);\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    loginClicked() {\r\n        //in28minutes, dummy\r\n        // if (this.state.username === 'in28minutes' && this.state.password === 'dummy') {\r\n\r\n        //     AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password)\r\n\r\n        //     //redirect to welcome page\r\n        //     this.props.history.push(`/welcome/${this.state.username}`)\r\n        //     //this.setState({ showSuccessMessage: true })\r\n        //     //this.setState({ hasLoginFailed: false })\r\n        // } else {\r\n        //     console.log('Failed')\r\n        //     this.setState({ showSuccessMessage: false })\r\n        //     this.setState({ hasLoginFailed: true })\r\n        // }\r\n\r\n        // AuthenticationService.executeBasicAuthenticationService(this.state.username, this.state.password)\r\n        //     .then(() => {\r\n        //         AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password)\r\n        //         this.props.history.push(`/welcome/${this.state.username}`)\r\n        //     }).catch(() => {\r\n        //         this.setState({ showSuccessMessage: false })\r\n        //         this.setState({ hasLoginFailed: true })\r\n        //     })\r\n\r\n        AuthenticationService.executeJwtAuthenticationService(this.state.username, this.state.password)\r\n            .then((respon) => {\r\n                AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password)\r\n                this.props.history.push(`/welcome/${this.state.username}`)\r\n            }).catch(() => {\r\n                this.setState({ showSuccessMessage: false })\r\n                this.setState({ hasLoginFailed: true })\r\n            })\r\n        \r\n    }\r\n\r\n    // handleUsernameChange(event) {\r\n    //     console.log(event.target.value);\r\n    //     this.setState(\r\n    //         {\r\n    //             [event.target.name] : event.target.value\r\n    //         }\r\n    //     )\r\n    // }\r\n\r\n    // handlePasswordChange(event) {\r\n    //     console.log(event.target.value);\r\n    //     this.setState(\r\n    //         {\r\n    //             password: event.target.value\r\n    //         }\r\n    //     )\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Login</h1>\r\n                <div className=\"container\">\r\n                    {/* show INVALID only if hasLoginFailed is true */}\r\n\r\n                    {/* <ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed} /> */}\r\n                    {/****** if first condition is true, return what is after &&  --> replacement for line above ******/}\r\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\r\n                    {/* <LoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/> */}\r\n                    {this.state.showSuccessMessage && <div>Login Successful</div>}\r\n\r\n                    {/* <div>Invalid Credentials</div>\r\n                <div>Login Successful</div> */}\r\n                    User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                    <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default LoginComponent"]},"metadata":{},"sourceType":"module"}
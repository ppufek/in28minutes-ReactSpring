{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EPUFPAU\\\\Desktop\\\\todo-app\\\\src\\\\components\\\\todo\\\\ListTodosComponent.jsx\";\nimport React, { Component } from 'react';\nimport TodoDataService from '../../api/todo/TodoDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\n\nclass ListTodosComponent extends Component {\n  constructor(props) {\n    console.log('constructor');\n    super(props);\n    this.state = {\n      todos: [],\n      message: null\n    };\n  } //this is called just before component is unmounted\n\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('shouldComponentUpdate');\n    console.log(nextProps);\n    console.log(nextState); //return false; //even the state is updated, DO NOT render\n\n    return true;\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n    let username = AuthenticationService.getLoggedInUserName;\n    TodoDataService.retrieveAllTodos(username).then(response => {\n      console.log(response);\n      this.setState({\n        todos: response.data\n      });\n    });\n  }\n\n  deleteTodoClicked(id) {\n    let username = AuthenticationService.getLoggedInUserName;\n    TodoDataService.deleteTodo(username, id).then(response => {\n      this.setState({\n        message: \"Delete of todo \".concat(id)\n      });\n    });\n  }\n\n  render() {\n    console.log('render');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"List Todos\"), this.state.message && React.createElement(\"div\", {\n      className: \"alert alert-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.message), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Is Completed?\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Target Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Delete\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.todos.map(todo => React.createElement(\"tr\", {\n      key: todo.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, todo.description), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, todo.done.toString()), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, todo.targetDate.toString()), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Delete\"))))))));\n  }\n\n}\n\nexport default ListTodosComponent;","map":{"version":3,"sources":["C:\\Users\\EPUFPAU\\Desktop\\todo-app\\src\\components\\todo\\ListTodosComponent.jsx"],"names":["React","Component","TodoDataService","AuthenticationService","ListTodosComponent","constructor","props","console","log","state","todos","message","componentWillUnmount","shouldComponentUpdate","nextProps","nextState","componentDidMount","username","getLoggedInUserName","retrieveAllTodos","then","response","setState","data","deleteTodoClicked","id","deleteTodo","render","map","todo","description","done","toString","targetDate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport TodoDataService from '../../api/todo/TodoDataService.js'\r\nimport AuthenticationService from './AuthenticationService.js'\r\n\r\nclass ListTodosComponent extends Component {\r\n\r\n    constructor(props) {\r\n        console.log('constructor')\r\n        super(props)\r\n        this.state = {\r\n            todos:\r\n                [],\r\n            message : null\r\n        }\r\n    }\r\n\r\n    //this is called just before component is unmounted\r\n    componentWillUnmount() {\r\n        console.log('componentWillUnmount')\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        console.log('shouldComponentUpdate');\r\n        console.log(nextProps);\r\n        console.log(nextState);\r\n        //return false; //even the state is updated, DO NOT render\r\n        return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('componentDidMount')\r\n        let username = AuthenticationService.getLoggedInUserName\r\n        TodoDataService.retrieveAllTodos(username)\r\n            .then(\r\n                response => {\r\n                    console.log(response)\r\n                    this.setState({ todos: response.data })\r\n                }\r\n            )\r\n    }\r\n\r\n    deleteTodoClicked(id) {\r\n        let username = AuthenticationService.getLoggedInUserName\r\n        TodoDataService.deleteTodo(username, id)\r\n        .then(\r\n            response => {\r\n                this.setState({message: `Delete of todo ${id}`})\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        console.log('render')\r\n        return (\r\n            <div>\r\n                <h1>List Todos</h1>\r\n\r\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\r\n\r\n                <div className=\"container\">\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                {/* <th>id</th> */}\r\n                                <th>Description</th>\r\n                                <th>Is Completed?</th>\r\n                                <th>Target Date</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.todos.map(\r\n                                    todo =>\r\n                                        <tr key={todo.id}>\r\n                                            {/* <td>{todo.id}</td> */}\r\n                                            <td>{todo.description}</td>\r\n                                            <td>{todo.done.toString()}</td>\r\n                                            <td>{todo.targetDate.toString()}</td>\r\n                                            <td><button className=\"btn btn-warning\">Delete</button></td>\r\n                                        </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListTodosComponent"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EPUFPAU\\\\Desktop\\\\todo-app\\\\src\\\\components\\\\counter\\\\Counter.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Counter.css';\nimport { tsExpressionWithTypeArguments } from '@babel/types';\n\nclass Counter extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"counter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(CounterButton, {\n      by: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }), React.createElement(CounterButton, {\n      by: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass CounterButton extends Component {\n  // Define the initial state in a constructor\n  // state => counter 0\n  constructor() {\n    super(); // Error 1\n\n    this.increment = () => {\n      // Update state\n      // console.log('increment');\n      this.setState({\n        counter: this.state.counter + this.props.by,\n        secondCounter: this.state.secondCounter + 1\n      });\n    };\n\n    this.state = {\n      counter: 0,\n      secondCounter: 100 // Arrow function prevents the need for binding, the binding happend automatically\n      // this.increment = this.increment.bind(this)\n\n    };\n  }\n\n  render() {\n    // render = () => {\n    //block scope variable -> let\n    // const style = {fontSize: \"70px\", padding: \"15px 30px\"}\n    return React.createElement(\"div\", {\n      className: \"counter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.increment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"+\", this.props.by), React.createElement(\"span\", {\n      className: \"count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.state.counter));\n  }\n\n}\n\nCounterButton.defaultProps = {\n  by: 1\n};\nCounterButton.propTypes = {\n  by: PropTypes.number\n};\nexport default Counter;","map":{"version":3,"sources":["C:\\Users\\EPUFPAU\\Desktop\\todo-app\\src\\components\\counter\\Counter.jsx"],"names":["React","Component","PropTypes","tsExpressionWithTypeArguments","Counter","render","CounterButton","constructor","increment","setState","counter","state","props","by","secondCounter","defaultProps","propTypes","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,eAAP;AACA,SAASC,6BAAT,QAA8C,cAA9C;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC5BI,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAe,MAAA,EAAE,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,aAAD;AAAe,MAAA,EAAE,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAR2B;;AAWhC,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AAElC;AACA;AAEAM,EAAAA,WAAW,GAAG;AACV,YADU,CACD;;AADC,SA2BdC,SA3Bc,GA2BF,MAAM;AAAE;AAChB;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD,OAAX,GAAqB,KAAKE,KAAL,CAAWC,EAD/B;AAEVC,QAAAA,aAAa,EAAE,KAAKH,KAAL,CAAWG,aAAX,GAA2B;AAFhC,OAAd;AAIH,KAjCa;;AAEV,SAAKH,KAAL,GAAa;AACTD,MAAAA,OAAO,EAAE,CADA;AAETI,MAAAA,aAAa,EAAE,GAFN,CAKb;AACA;;AANa,KAAb;AAOH;;AAEDT,EAAAA,MAAM,GAAG;AACL;AAEA;AACA;AAGA,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,KAAKG,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAmC,KAAKI,KAAL,CAAWC,EAA9C,CADJ,EAEI;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,KAAKF,KAAL,CAAWD,OAApC,CAFJ,CADJ;AAQH;;AA/BiC;;AA0CtCJ,aAAa,CAACS,YAAd,GAA6B;AACzBF,EAAAA,EAAE,EAAE;AADqB,CAA7B;AAIAP,aAAa,CAACU,SAAd,GAA0B;AACtBH,EAAAA,EAAE,EAAEX,SAAS,CAACe;AADQ,CAA1B;AAIA,eAAeb,OAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Counter.css'\r\nimport { tsExpressionWithTypeArguments } from '@babel/types';\r\n\r\nclass Counter extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"counter\">\r\n                <CounterButton by={1} />\r\n                <CounterButton by={5} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass CounterButton extends Component {\r\n\r\n    // Define the initial state in a constructor\r\n    // state => counter 0\r\n\r\n    constructor() {\r\n        super(); // Error 1\r\n        this.state = {\r\n            counter: 0,\r\n            secondCounter: 100\r\n        }\r\n\r\n        // Arrow function prevents the need for binding, the binding happend automatically\r\n        // this.increment = this.increment.bind(this)\r\n    }\r\n\r\n    render() {\r\n        // render = () => {\r\n\r\n        //block scope variable -> let\r\n        // const style = {fontSize: \"70px\", padding: \"15px 30px\"}\r\n\r\n\r\n        return (\r\n            <div className=\"counter\">\r\n                <button onClick={this.increment}>+{this.props.by}</button>\r\n                <span className=\"count\">{this.state.counter}</span>\r\n                {/* <span className=\"count\">{this.state.secondCounter}</span> */}\r\n\r\n            </div>\r\n        );\r\n    }\r\n    increment = () => { // Update state\r\n        // console.log('increment');\r\n        this.setState({\r\n            counter: this.state.counter + this.props.by,\r\n            secondCounter: this.state.secondCounter + 1\r\n        });\r\n    }\r\n\r\n}\r\n\r\nCounterButton.defaultProps = {\r\n    by: 1\r\n}\r\n\r\nCounterButton.propTypes = {\r\n    by: PropTypes.number\r\n}\r\n\r\nexport default Counter"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EPUFPAU\\\\Desktop\\\\todo-app\\\\src\\\\components\\\\counter\\\\Counter.jsx\";\nimport React, { Component } from 'react';\nimport './Counter.css';\nimport { tsExpressionWithTypeArguments } from '@babel/types';\n\nclass Counter extends Component {\n  // Define the initial state in a constructor\n  // state => counter 0\n  constructor() {\n    super(); // Error 1\n\n    this.increment = () => {\n      // Update state\n      // console.log('increment');\n      this.setState({\n        counter: this.state.counter + 1,\n        secondCounter: this.state.secondCounter + 1\n      });\n    };\n\n    this.state = {\n      counter: 0,\n      secondCounter: 100 // Arrow function prevents the need for binding, the binding happend automatically\n      // this.increment = this.increment.bind(this)\n\n    };\n  }\n\n  render() {\n    // render = () => {\n    //block scope variable -> let\n    const style = {\n      fontSize: \"70px\",\n      padding: \"15px 30px\"\n    };\n    return React.createElement(\"div\", {\n      className: \"counter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.increment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"+1\"), React.createElement(\"span\", {\n      className: \"count\",\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.state.counter));\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["C:\\Users\\EPUFPAU\\Desktop\\todo-app\\src\\components\\counter\\Counter.jsx"],"names":["React","Component","tsExpressionWithTypeArguments","Counter","constructor","increment","setState","counter","state","secondCounter","render","style","fontSize","padding"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,SAASC,6BAAT,QAA8C,cAA9C;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAE5B;AACA;AAEAG,EAAAA,WAAW,GAAG;AACV,YADU,CACD;;AADC,SA4BdC,SA5Bc,GA4BF,MAAM;AAAE;AAChB;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD,OAAX,GAAqB,CADpB;AAEVE,QAAAA,aAAa,EAAE,KAAKD,KAAL,CAAWC,aAAX,GAA2B;AAFhC,OAAd;AAIH,KAlCa;;AAEV,SAAKD,KAAL,GAAa;AACTD,MAAAA,OAAO,EAAE,CADA;AAETE,MAAAA,aAAa,EAAE,GAFN,CAKb;AACA;;AANa,KAAb;AAOH;;AAEDC,EAAAA,MAAM,GAAG;AACL;AAEA;AACA,UAAMC,KAAK,GAAG;AAACC,MAAAA,QAAQ,EAAE,MAAX;AAAmBC,MAAAA,OAAO,EAAE;AAA5B,KAAd;AAGA,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,KAAKR,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAM,MAAA,SAAS,EAAC,OAAhB;AACI,MAAA,KAAK,EAAGM,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACoB,KAAKH,KAAL,CAAWD,OAD/B,CAFJ,CADJ;AASH;;AAhC2B;;AA6ChC,eAAeJ,OAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport './Counter.css'\r\nimport { tsExpressionWithTypeArguments } from '@babel/types';\r\n\r\nclass Counter extends Component {\r\n\r\n    // Define the initial state in a constructor\r\n    // state => counter 0\r\n\r\n    constructor() {\r\n        super(); // Error 1\r\n        this.state = {\r\n            counter: 0,\r\n            secondCounter: 100\r\n        }\r\n\r\n        // Arrow function prevents the need for binding, the binding happend automatically\r\n        // this.increment = this.increment.bind(this)\r\n    }\r\n\r\n    render() {\r\n        // render = () => {\r\n\r\n        //block scope variable -> let\r\n        const style = {fontSize: \"70px\", padding: \"15px 30px\"}\r\n        \r\n\r\n        return (\r\n            <div className=\"counter\">\r\n                <button onClick={this.increment}>+1</button>\r\n                <span className=\"count\"\r\n                    style= {style}>{this.state.counter}</span>\r\n                {/* <span className=\"count\">{this.state.secondCounter}</span> */}\r\n\r\n            </div>\r\n        );\r\n    }\r\n    increment = () => { // Update state\r\n        // console.log('increment');\r\n        this.setState({\r\n            counter: this.state.counter + 1,\r\n            secondCounter: this.state.secondCounter + 1\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default Counter"]},"metadata":{},"sourceType":"module"}
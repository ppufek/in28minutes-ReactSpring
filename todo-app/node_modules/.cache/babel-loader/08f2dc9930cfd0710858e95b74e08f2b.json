{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EPUFPAU\\\\Desktop\\\\todo-app\\\\src\\\\components\\\\todo\\\\TodoApp.jsx\";\nimport React, { Component } from 'react';\n\nclass TodoApp extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"TodoApp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, React.createElement(LoginComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: 'in28minutes',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false // this.handleUsernameChange = this.handleUsernameChange.bind(this)\n      // this.handlePasswordChange = this.handlePasswordChange.bind(this)\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    console.log(this.state);\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    if (this.state.username === 'in28minutes' && this.state.password === 'dummy') {\n      console.log('Success');\n      this.setState({\n        showSuccessMessage: true\n      });\n      this.setState({\n        hasLoginFailed: false\n      });\n    } else {\n      console.log('Failed');\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    }\n  } // handleUsernameChange(event) {\n  //     console.log(event.target.value);\n  //     this.setState(\n  //         {\n  //             [event.target.name] : event.target.value\n  //         }\n  //     )\n  // }\n  // handlePasswordChange(event) {\n  //     console.log(event.target.value);\n  //     this.setState(\n  //         {\n  //             password: event.target.value\n  //         }\n  //     )\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.hasLoginFailed && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Invalid Credentials\"), React.createElement(LoginSuccessMessage, {\n      showSuccessMessage: this.state.showSuccessMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), this.state.s, \"User Name: \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), \"Password: \", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.loginClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Login\"));\n  }\n\n}\n\nfunction ShowInvalidCredentials(props) {\n  if (props.hasLoginFailed) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Invalid Credentials\");\n  } else {\n    return null;\n  }\n}\n\nfunction LoginSuccessMessage(props) {\n  if (props.showSuccessMessage) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Login Successful\");\n  } else {\n    return null;\n  }\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["C:\\Users\\EPUFPAU\\Desktop\\todo-app\\src\\components\\todo\\TodoApp.jsx"],"names":["React","Component","TodoApp","render","LoginComponent","constructor","props","state","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","console","log","setState","target","name","value","s","ShowInvalidCredentials","LoginSuccessMessage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass TodoApp extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"TodoApp\">\r\n                <LoginComponent />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass LoginComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: 'in28minutes',\r\n            password: '',\r\n            hasLoginFailed: false,\r\n            showSuccessMessage: false\r\n        }\r\n        // this.handleUsernameChange = this.handleUsernameChange.bind(this)\r\n        // this.handlePasswordChange = this.handlePasswordChange.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.loginClicked = this.loginClicked.bind(this)\r\n\r\n    }\r\n\r\n    handleChange(event) {\r\n        console.log(this.state);\r\n        this.setState(\r\n            {\r\n                [event.target.name]: event.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    loginClicked() {\r\n        if (this.state.username === 'in28minutes' && this.state.password === 'dummy') {\r\n            console.log('Success')\r\n            this.setState({ showSuccessMessage: true })\r\n            this.setState({ hasLoginFailed: false })\r\n        } else {\r\n            console.log('Failed')\r\n            this.setState({ showSuccessMessage: false })\r\n            this.setState({ hasLoginFailed: true })\r\n        }\r\n    }\r\n\r\n    // handleUsernameChange(event) {\r\n    //     console.log(event.target.value);\r\n    //     this.setState(\r\n    //         {\r\n    //             [event.target.name] : event.target.value\r\n    //         }\r\n    //     )\r\n    // }\r\n\r\n    // handlePasswordChange(event) {\r\n    //     console.log(event.target.value);\r\n    //     this.setState(\r\n    //         {\r\n    //             password: event.target.value\r\n    //         }\r\n    //     )\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* show INVALID only if hasLoginFailed is true */}\r\n\r\n                {/* <ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed} /> */}\r\n                {/****** if first condition is true, return what is after &&  --> replacement for line above ******/}\r\n                {this.state.hasLoginFailed && <div>Invalid Credentials</div>}\r\n\r\n                <LoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage}/>\r\n                {this.state.s}\r\n                {/* <div>Invalid Credentials</div>\r\n                <div>Login Successful</div> */}\r\n                User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n                Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                <button onClick={this.loginClicked}>Login</button>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nfunction ShowInvalidCredentials(props) {\r\n    if (props.hasLoginFailed) {\r\n        return <div>Invalid Credentials</div>\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nfunction LoginSuccessMessage(props) {\r\n    if (props.showSuccessMessage) {\r\n        return <div>Login Successful</div>\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport default TodoApp;"]},"metadata":{},"sourceType":"module"}
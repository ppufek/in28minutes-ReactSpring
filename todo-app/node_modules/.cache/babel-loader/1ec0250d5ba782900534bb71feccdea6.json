{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EPUFPAU\\\\Desktop\\\\todo-app\\\\src\\\\components\\\\todo\\\\ListTodosComponent.jsx\";\nimport React, { Component } from 'react';\nimport TodoDataService from '../../api/todo/TodoDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\nimport moment from 'moment'; //JS library used to format Dates\n\nclass ListTodosComponent extends Component {\n  constructor(props) {\n    console.log('constructor');\n    super(props);\n    this.state = {\n      todos: [],\n      message: null\n    };\n    this.deleteTodoClicked = this.deleteTodoClicked.bind(this);\n    this.updateTodoClicked = this.updateTodoClicked.bind(this);\n    this.addTodoClicked = this.addTodoClicked.bind(this);\n    this.refreshTodos = this.refreshTodos.bind(this);\n  } //this is called just before component is unmounted\n\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('shouldComponentUpdate');\n    console.log(nextProps);\n    console.log(nextState); //return false; //even the state is updated, DO NOT render\n\n    return true;\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n    this.refreshTodos();\n    console.log(this.state);\n  }\n\n  refreshTodos() {\n    let username = AuthenticationService.getLoggedInUserName;\n    TodoDataService.retrieveAllTodos(username).then(response => {\n      console.log(response);\n      this.setState({\n        todos: response.data\n      });\n    });\n  }\n\n  deleteTodoClicked(id) {\n    let username = AuthenticationService.getLoggedInUserName;\n    console.log(id + \" \" + username);\n    TodoDataService.deleteTodo(username, id).then(response => {\n      this.setState({\n        message: \"Delete of todo \".concat(id, \" successful\")\n      });\n      this.refreshTodos();\n    });\n  }\n\n  addTodoClicked(id) {\n    this.props.history.push(\"/todos/\".concat(id));\n  }\n\n  updateTodoClicked(id) {\n    this.props.history.push(\"/todos/\".concat(id)); // let username = AuthenticationService.getLoggedInUserName\n    // console.log(id + \" \" + username);\n    // TodoDataService.deleteTodo(username, id)\n    // .then(\n    //     response => {\n    //         this.setState({message: `Delete of todo ${id} successful`});\n    //         this.refreshTodos()\n    //     }\n    // )\n  }\n\n  render() {\n    console.log('render');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"List Todos\"), this.state.message && React.createElement(\"div\", {\n      className: \"alert alert-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.message), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Is Completed?\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Target Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Delete\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.state.todos.map(todo => React.createElement(\"tr\", {\n      key: todo.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, todo.description), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, todo.done.toString()), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, moment(todo.targetDate).format('YYYY-MM-DD')), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: () => this.updateTodoClicked(todo.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Update\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: () => this.deleteTodoClicked(todo.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Delete\")))))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: \"this.addTodoClicked\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Add\"))));\n  }\n\n}\n\nexport default ListTodosComponent;","map":{"version":3,"sources":["C:\\Users\\EPUFPAU\\Desktop\\todo-app\\src\\components\\todo\\ListTodosComponent.jsx"],"names":["React","Component","TodoDataService","AuthenticationService","moment","ListTodosComponent","constructor","props","console","log","state","todos","message","deleteTodoClicked","bind","updateTodoClicked","addTodoClicked","refreshTodos","componentWillUnmount","shouldComponentUpdate","nextProps","nextState","componentDidMount","username","getLoggedInUserName","retrieveAllTodos","then","response","setState","data","id","deleteTodo","history","push","render","map","todo","description","done","toString","targetDate","format"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport TodoDataService from '../../api/todo/TodoDataService.js'\r\nimport AuthenticationService from './AuthenticationService.js'\r\nimport moment from 'moment' //JS library used to format Dates\r\n\r\nclass ListTodosComponent extends Component {\r\n\r\n    constructor(props) {\r\n        console.log('constructor')\r\n        super(props)\r\n        this.state = {\r\n            todos: [],\r\n            message : null\r\n        }\r\n        this.deleteTodoClicked = this.deleteTodoClicked.bind(this)\r\n        this.updateTodoClicked = this.updateTodoClicked.bind(this)\r\n        this.addTodoClicked = this.addTodoClicked.bind(this)\r\n        this.refreshTodos = this.refreshTodos.bind(this)\r\n    }\r\n\r\n    //this is called just before component is unmounted\r\n    componentWillUnmount() {\r\n        console.log('componentWillUnmount')\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        console.log('shouldComponentUpdate');\r\n        console.log(nextProps);\r\n        console.log(nextState);\r\n        //return false; //even the state is updated, DO NOT render\r\n        return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('componentDidMount')\r\n        this.refreshTodos();\r\n        console.log(this.state)\r\n    }\r\n\r\n    refreshTodos() {\r\n        let username = AuthenticationService.getLoggedInUserName\r\n        TodoDataService.retrieveAllTodos(username)\r\n            .then(\r\n                response => {\r\n                    console.log(response)\r\n                    this.setState({ todos: response.data })\r\n                }\r\n            )\r\n    }\r\n\r\n    deleteTodoClicked(id) {\r\n        let username = AuthenticationService.getLoggedInUserName\r\n        console.log(id + \" \" + username);\r\n        TodoDataService.deleteTodo(username, id)\r\n        .then(\r\n            response => {\r\n                this.setState({message: `Delete of todo ${id} successful`});\r\n                this.refreshTodos()\r\n            }\r\n        )\r\n    }\r\n\r\n    addTodoClicked(id) {\r\n        this.props.history.push(`/todos/${id}`)\r\n    }\r\n\r\n    updateTodoClicked(id) {\r\n        this.props.history.push(`/todos/${id}`)\r\n        // let username = AuthenticationService.getLoggedInUserName\r\n        // console.log(id + \" \" + username);\r\n        // TodoDataService.deleteTodo(username, id)\r\n        // .then(\r\n        //     response => {\r\n        //         this.setState({message: `Delete of todo ${id} successful`});\r\n        //         this.refreshTodos()\r\n        //     }\r\n        // )\r\n    }\r\n\r\n    render() {\r\n        console.log('render')\r\n        return (\r\n            <div>\r\n                <h1>List Todos</h1>\r\n\r\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\r\n\r\n                <div className=\"container\">\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                {/* <th>id</th> */}\r\n                                <th>Description</th>\r\n                                <th>Is Completed?</th>\r\n                                <th>Target Date</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.todos.map(\r\n                                    todo =>\r\n                                        <tr key={todo.id}>\r\n                                            {/* <td>{todo.id}</td> */}\r\n                                            <td>{todo.description}</td>\r\n                                            <td>{todo.done.toString()}</td>\r\n                                            <td>{moment(todo.targetDate).format('YYYY-MM-DD')}</td>\r\n                                            <td><button className=\"btn btn-success\" onClick={() => this.updateTodoClicked(todo.id)}>Update</button></td>\r\n                                            <td><button className=\"btn btn-warning\" onClick={() => this.deleteTodoClicked(todo.id)}>Delete</button></td>\r\n                                        </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"row\">\r\n                            <button className=\"btn btn-success\" onClick=\"this.addTodoClicked\">Add</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListTodosComponent"]},"metadata":{},"sourceType":"module"}